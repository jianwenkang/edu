<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.1.xsd">
        <context:component-scan base-package="com.crown.springsecurity.security.demo5"/>
        <!--配置公开资源-->
        <security:http pattern="/login2.jsp*" security="none"/>
        <!--自定义filter-->
        <security:http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
                <!--配置自定义的认证  替换form-login-->
                <security:custom-filter ref="usernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
                <security:custom-filter ref="rememberMeAuthenticationFilter" after="FORM_LOGIN_FILTER"/>
                <!--登出filter 替换logout-->
                <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER"/>
                <!--受限资源filter 替换intercept-url-->
                <security:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
                <!--异常filter-->
                <security:custom-filter ref="exceptionTranslationFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
        </security:http>

        <!--自定义受限资源过滤器-->
        <bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
                <property name="authenticationManager" ref="myAuthenticationManager"/>
                <property name="accessDecisionManager" ref="myAccessDecisionManager"/>
                <property name="securityMetadataSource" ref="myFilterInvocationSecurityMetadataSource"/>
        </bean>
        <!--定义自定义的认证filter-->
        <bean id="usernamePasswordAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
                <property name="authenticationManager" ref="myAuthenticationManager"/>
                <property name="filterProcessesUrl" value="/user/login"/>
                <property name="usernameParameter" value="un"/>
                <property name="passwordParameter" value="pw"/>
                <property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
                <property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
                <!--生成cookie-->
                <property name="rememberMeServices" ref="tokenBasedRememberMeServices"/>
        </bean>
        <!--认证失败-->
        <bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/login2.jsp"/>
        </bean>
        <!--认证成功-->
        <bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <property name="alwaysUseDefaultTargetUrl" value="false"/>
                <property name="defaultTargetUrl" value="/index.jsp"/>
        </bean>
        <!--认证入口-->
        <bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
                <!--配置登陆页面的路径-->
                <property name="loginFormUrl" value="/login2.jsp"/>
        </bean>
        <!--认证--><!-- erase-credentials 擦除认证信息-->
        <security:authentication-manager alias="myAuthenticationManager" erase-credentials="false">
                <!--代替原来固定的配置信息-->
                <security:authentication-provider user-service-ref="myUserDetailsService">
                        <!--使用自定义的加密算法  并使用用户名做为盐-->
                        <security:password-encoder ref="myPasswordEncoder">
                                <!--user-property 指向封装在UserDetails中的相应属性-->
                                <security:salt-source user-property="mySaltValue"/>
                        </security:password-encoder>
                </security:authentication-provider>
                <!--完成remeber的provider-->
                <security:authentication-provider ref="rememberMeAuthenticationProvider"/>
        </security:authentication-manager>

        <!--记住密码-->
        <!--校验cookie-->
        <bean id="rememberMeAuthenticationFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
                <property name="rememberMeServices" ref="tokenBasedRememberMeServices"/>
                <property name="authenticationManager" ref="myAuthenticationManager"/>
        </bean>
        <!--生成cookie-->
        <bean id="tokenBasedRememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
                <property name="userDetailsService" ref="myUserDetailsService"/>
                <property name="key" value="springRocks"/>
                <property name="cookieName" value="myCookie"/>
                <property name="parameter" value="remeber"/>
                <property name="tokenValiditySeconds" value="30"/>
        </bean>
        <!--密钥-->
        <bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
                <property name="key" value="springRocks" />
        </bean>

        <!--定义logout-->
        <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
                <constructor-arg index="0" value="/login2.jsp"/>
                <constructor-arg index="1">
                        <list>
                                <!--清除session-->
                                <ref bean="securityContextLogoutHandler"/>
                                <!--清除cookie-->
                                <ref bean="tokenBasedRememberMeServices"/>
                        </list>
                </constructor-arg>
                <property name="filterProcessesUrl" value="/user/logout"/>
        </bean>

        <bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>

        <!--异常管理类-->
        <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
                <property name="authenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint"/>
                <property name="accessDeniedHandler" ref="accessDeniedHandler"/>
        </bean>
        <bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/accessDenied.jsp"/>
        </bean>

        <!-- 修改rolePrefix,否则Spring要求权限必须以ROLE_开头 -->
        <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
                <property name="rolePrefix" value=""/>
        </bean>

        <bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter"></bean>

        <bean id="affirmativeBased" class="org.springframework.security.access.vote.AffirmativeBased">
                <constructor-arg name="decisionVoters">
                        <list>
                                <ref bean="roleVoter"/>
                                <ref bean="authenticatedVoter"/>
                        </list>
                </constructor-arg>
        </bean>
</beans>


